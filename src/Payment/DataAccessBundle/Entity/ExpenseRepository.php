<?php

namespace Payment\DataAccessBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * ExpenseRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ExpenseRepository extends EntityRepository
{
	public function findExpenseByFilters($expenseDate,$expenseName,$expenseRuc, $offset, $limit,$count = true ) 
	{
		$queryBuilder = $this->getEntityManager()->createQueryBuilder('e');
		if ($count) 
		{
			$queryBuilder->add('select', $queryBuilder->expr()->count('e.id'));
		}
		else 
		{
			$queryBuilder->add('select', 'e');
			$queryBuilder->orderBy('e.id','DESC');
			$queryBuilder->setFirstResult($offset);
			$queryBuilder->setMaxResults($limit);
		}
		$queryBuilder->add('from', 'PaymentDataAccessBundle:Expense e');			
		$queryBuilder->Where('e.isDeleted = 0');
		
		if ($expenseDate != null) 
		{
			$queryBuilder->andWhere('e.expenseDate = ?1');
			$queryBuilder->setParameter(1, $expenseDate);	
		}
		
		if ($expenseName != null) 
		{
			$expenseName = str_replace(' ', '%', $expenseName);
			$expenseName = '%' . strtolower($expenseName) . '%';
			$queryBuilder->andwhere($queryBuilder->expr()->like($queryBuilder->expr()->lower('e.expenseName'), '?2'));
			$queryBuilder->setParameter(2, $expenseName);
		}
		
		if ($expenseRuc != null) 
		{
			$expenseRuc = '%'.$expenseRuc . '%';
			$queryBuilder->andwhere($queryBuilder->expr()->like('e.expenseNumber', '?3'));
			$queryBuilder->setParameter(3, $expenseRuc);
		}
		
		$query = $queryBuilder->getQuery();
		$result = $query->getResult();
		return $result;
	}
					
	public function findExpensesByFilters($startDate,$endDate, $offset, $limit, $count = true) 
	{
		$queryBuilder = $this->getEntityManager()->createQueryBuilder('e');
		if ($count)
		{
			$queryBuilder->add('select', $queryBuilder->expr()->count('e.id'));
		}
		else
		{
			$queryBuilder->add('select', 'e');
			$queryBuilder->orderBy('e.id');
			$queryBuilder->setFirstResult($offset);
			$queryBuilder->setMaxResults($limit);
		}
		$queryBuilder->add('from', 'PaymentDataAccessBundle:Expense e');
		$queryBuilder->Where('e.isDeleted = 0');
		if($startDate)
		{
			$queryBuilder->andWhere($queryBuilder->expr()->gte('e.expenseDate', '?1'));
			$queryBuilder->setParameter(1, $startDate);
		}
		if($endDate)
		{
			$queryBuilder->andWhere("e.expenseDate < DATE_ADD('".$endDate."', 1,'day')");
		}
		$query = $queryBuilder->getQuery();
		$result = $query->getResult();
		return $result;
		
	}	
}	